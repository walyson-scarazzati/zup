name: Build code, run unit test, run SAST, SCA, DAST security scans

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    name: Run unit tests and SAST scan on the source code
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven and analyze with SonarCloud
      run: mvn -B verify sonar:sonar -Dsonar.projectKey=walyson-scarazzati_zup -Dsonar.organization=walyson-scarazzati -Dsonar.host.url=https://sonarcloud.io -Dsonar.token=$SONAR_TOKEN
      working-directory: ./Zup
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  security:
    runs-on: ubuntu-latest
    needs: build
    name: Run the SCA scan on the source code
    steps:
      - uses: actions/checkout@master
      - name: RunSnyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        
 zap_scan:
    runs-on: ubuntu-latest
    needs: security
    name: Run DAST scan on the web application
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Start Spring Boot application
      run: |
        cd Zup
        nohup mvn spring-boot:run > /dev/null 2>&1 &
      env:
        SPRING_PROFILES_ACTIVE: dev
    - name: Wait for application to start
      run: sleep 60 # Increased wait time
    - name: Verify application is running
      run: curl -I http://localhost:8081 || exit 1
    - name: ZAP Scan
      uses: zaproxy/action-baseline@v0.10.0
      with:
        docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
        target: 'http://localhost:8081'
        rules_file_name: '.zap/rules.tsv'
        cmd_options: '-a'
    - name: Stop Spring Boot application
      run: |
        pkill -f 'mvn spring-boot:run'


