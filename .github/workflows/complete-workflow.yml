name: Build, Test, and Push Docker Images

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build code and run unit tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Build with Maven and analyze with SonarCloud
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=walyson-scarazzati_zup -Dsonar.organization=walyson-scarazzati -Dsonar.host.url=https://sonarcloud.io -Dsonar.token=$SONAR_TOKEN
        working-directory: ./Zup
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  security:
    runs-on: ubuntu-latest
    needs: build
    name: Run SCA scan on the source code
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true
        with:
          working-directory: ./Zup
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    needs: security
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
      - name: Build and Push MySQL Image
        run: |
          cd Zup/docker
          docker-compose build mysqldb  # Constrói a imagem do MySQL
          docker tag mysqldb walysonsilva/mysqldb:latest
          docker push walysonsilva/mysqldb:latest  # Faz o push para o Docker Hub
          
      - name: Get version from pom.xml
        id: get_version
        run: |
          cd ./Zup  # Certifique-se de que você está no diretório correto
          TAG=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "TAG=$TAG" >> $GITHUB_ENV # Define a variável de ambiente TAG

      - name: Build Zup-App Image
        run: |
         cd Zup/docker
         docker-compose build --build-arg VERSION=${{ env.TAG }}

      - name: Push Zup-App Image
        run: |
         docker tag zup-app:${{ env.TAG }} walysonsilva/zup-app:${{ env.TAG }}  # Tagging the Zup app image
         docker push walysonsilva/zup-app:${{ env.TAG }}  # Push to Docker Hub
