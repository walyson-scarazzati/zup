name: Build, Test, and Push Docker Images

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build code and run unit tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Build with Maven and analyze with SonarCloud
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=walyson-scarazzati_zup -Dsonar.organization=walyson-scarazzati -Dsonar.host.url=https://sonarcloud.io -Dsonar.token=$SONAR_TOKEN
        working-directory: ./Zup
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  security:
    runs-on: ubuntu-latest
    needs: build
    name: Run SCA scan on the source code
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    needs: security
    name: Build and Test Docker Images
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build Docker Images
        run: |
          cd Zup/docker
          docker-compose -f docker-compose.yml build

      - name: Run Docker Compose
        run: |
          cd Zup/docker
          docker-compose -f docker-compose.yml up -d

  zap_scan:
    runs-on: ubuntu-latest
    needs: docker
    name: Run DAST scan on the web application
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start Spring Boot application
        run: |
          cd Zup
          nohup mvn spring-boot:run -Dspring.profiles.active=docker > /dev/null 2>&1 &
        env:
          SPRING_PROFILES_ACTIVE: docker

      - name: Wait for application to start
        run: sleep 60 # Increased wait time 

      - name: Verify application is running
        run: curl -I http://localhost:8080 || exit 1

      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://localhost:8080'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

      - name: Stop Spring Boot application
        run: |
          pkill -f 'mvn spring-boot:run'

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push Docker Images
        run: |
          cd Zup/docker
          docker-compose -f docker-compose.yml push
      - name: Clean up Docker containers
        run: |
          cd Zup/docker
          docker-compose -f docker-compose.yml down
